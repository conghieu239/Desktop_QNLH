<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHh4AAAEAIACNBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAeAAAAHggGAAAAOzCuogAABFRJ
        REFUeJy1l11MW3UYxhltRylnhdP29IN9CFLWAj20lAKD2kphEzRTkxk/LpzuVhdvnBdebYlZvMCQuQsJ
        mkiAYAgJAbJABF1cILtEbxaXeGl2MWIsQZKFgMDjef5Lazt2TnvTf/KQl/d9n+fXpD2np2XR2MVDTYhE
        BxFuGyipyCCLKuMfNXwBZrMZLpdiKIvFDLdsw0lFyhN7nBXyk0FWFhxS++Dz1WJ2dtZQauA0frnRiL++
        V/PEHmeF/GSQlQWH2wbh9Z2CXbIi2XZSVzWSRRfMmZGX2WSQlQVTTc1JtLe1Yj/9u676zwVxttaKcJ0t
        T+xxZuRlNhl573EGHI22I3N2d3cxPz+PpaUlHBwciN7ff/6Gh3c+w4P5T/Ht9Uv47sYlPFi4Jnqc8XB3
        cXFRePf29rJ5zC4IJrSjowNut1uov78fh4eHYra/v494PA6PxyNmiURC9DLQVCqVnXV1dWXhRYH5an0+
        H3p6ekSQLMtYW1sTs+XlZSiKIoAU65WVFTFbXV0Vu/TQ6/V6sbCwUDx4ZGQEsVgsC1ZVFdPT02I2NjaG
        SCSCZDIpxJo9Hu5wNwNmBrOKBo+OjiIQCCAUCmm9KOrr6zEzMyNm4+Pj8Pv9CIfDQqzZ4+EOd+mhlxnM
        Khq8ubmJyclJTExMCE1NTWF7e1vMtra2xP+5M/Z4uJM7YwazdMG8tpxOLyRJQmdnV0nEbDLyrmPeTbxe
        H+bm5koqMvLuXOJebbHA43JBccolEbMtGiPvXk0FgnHUe5z4fDBaEjGbjOd+uEymcpyQqgwl2WwoKyvD
        sWNPxZq9Qj5mF3XL1Dtf3xpGywt2NMiVQqzZK3QML6dgsAnr6+u62tjYQPJcBB/2OhBz24VYs8eZkZfZ
        uuBqu4RETwT+0074nDZRZxRRG/Haq+fx3jtvwetR0N0eFmLNHmfcyfUwg1msma0Ljmuv/J9HP+L1lwNQ
        Gxx49HAWTx7/JHRv8TYGXukTN4XLH1zGzs6OEGv2OONOZp9eZjCLmczWB3e34e6dW3gp5MKVlAvDNz/G
        v+l7QvdXvsHgQL8umDPuZPaHb17FlT5Fy3KKTGYbglfmh3HcYkKl1YyvvvhIF5xOp4X0wPQyg1nMLAjO
        GDN68vhn3P7ykzwwL6Fc5YK5u7Nx90iOIZjXWrXNmpVDsuGPX3+AT3HkgSsqKnDhjTeFWOeCuUsPvblZ
        htex6lMwm2jPyqotp3rCR8AX334XLzb4hVg/C6aH3twsZuuCJe2V1WrGKlslwo1nYNbM16+9fwTMJ4sW
        7buYYv0smB56mcEsZjJbF2w/UQV/3SnI1XbEO1SYyssRaw2gQntYb21qEP1g4Kx4X5uam4VYsyfXVKM9
        EoS14ji6O596U4kYHHINAo11xtfxGUXG1V7VULVuBUNDQ+Jxh2LNXiEfs58Lbg71wmIyQdY+FEYyaTuK
        4hbfrRRrUxE+ZreEUkfBmSeR0v1o+/8HG/UfE2YrFpKS0FMAAAAASUVORK5CYII=
</value>
  </data>
</root>